name: Build and Release JAR

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  JAVA_VERSION: '17'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get project name and version
        id: project-info
        run: |
          # 获取项目名称（使用仓库名称）
          PROJECT_NAME="${{ github.event.repository.name }}"
          
          # 从pom.xml获取版本号
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # 设置输出变量
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project: $PROJECT_NAME, Version: $VERSION"

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Rename JAR file
        run: |
          # 重命名JAR文件
          OLD_JAR=$(ls target/*.jar | head -1)
          NEW_JAR="target/${{ steps.project-info.outputs.project_name }}-${{ steps.project-info.outputs.version }}.jar"
          mv "$OLD_JAR" "$NEW_JAR"
          echo "Renamed JAR file: $OLD_JAR -> $NEW_JAR"
          ls -la target/*.jar

      - name: Create GitHub Release
        # 修改这里：移除条件限制，每次构建都发布
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.project-info.outputs.version }}-${{ github.run_number }}
          release_name: ${{ steps.project-info.outputs.project_name }} v${{ steps.project-info.outputs.version }}
          body: |
            Automated release of ${{ steps.project-info.outputs.project_name }}
            
            - **Version**: ${{ steps.project-info.outputs.version }}
            - **Commit**: ${{ github.sha }}
            - **Build Date**: ${{ steps.date.outputs.date }}
            - **Run Number**: ${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            target/${{ steps.project-info.outputs.project_name }}-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}