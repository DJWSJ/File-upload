name: Build and Release JAR

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  JAVA_VERSION: '17'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的git历史记录，用于生成changelog

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get project name and version
        id: project-info
        run: |
          # 获取项目名称（使用仓库名称）
          PROJECT_NAME="${{ github.event.repository.name }}"
          
          # 从pom.xml获取版本号
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # 设置输出变量
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project: $PROJECT_NAME, Version: $VERSION"

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Generate changelog from commits
        id: commit-changelog
        run: |
          # 获取本次构建相关的提交信息
          if [ "${{ github.event_name }}" == "push" ]; then
            # 对于push事件，获取这次push的提交
            if [ -n "${{ github.event.before }}" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
              COMMITS=$(git log --oneline --pretty=format:"- %s" ${{ github.event.before }}..${{ github.event.after }} 2>/dev/null || echo "无法获取特定范围的提交")
            else
              # 如果是初始提交或无法获取范围，使用最近10条提交
              COMMITS=$(git log --oneline --pretty=format:"- %s" -10)
            fi
          elif [ "${{ github.event_name }}" == "release" ]; then
            # 对于release事件，获取上次release以来的提交
            LATEST_RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name 2>/dev/null || echo "")
            if [ -n "$LATEST_RELEASE" ] && [ "$LATEST_RELEASE" != "null" ]; then
              COMMITS=$(git log --oneline --pretty=format:"- %s" ${LATEST_RELEASE}..HEAD)
            else
              COMMITS=$(git log --oneline --pretty=format:"- %s" -20)
            fi
          else
            COMMITS=$(git log --oneline --pretty=format:"- %s" -10)
          fi
          
          # 如果没有获取到提交或提交为空
          if [ -z "$COMMITS" ] || [ "$COMMITS" = "无法获取特定范围的提交" ]; then
            COMMITS="- 📝 常规改进和优化\n- 🔧 代码维护和重构"
          fi
          
          # 格式化提交信息，移除重复的空行
          FORMATTED_COMMITS=$(echo -e "$COMMITS" | sed '/^$/N;/^\n$/D')
          
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$FORMATTED_COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "生成的更新日志:"
          echo "$FORMATTED_COMMITS"

      - name: Rename JAR file
        run: |
          # 重命名JAR文件
          OLD_JAR=$(ls target/*.jar | head -1)
          NEW_JAR="target/${{ steps.project-info.outputs.project_name }}-${{ steps.project-info.outputs.version }}.jar"
          mv "$OLD_JAR" "$NEW_JAR"
          echo "Renamed JAR file: $OLD_JAR -> $NEW_JAR"
          ls -la target/*.jar

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.project-info.outputs.version }}-${{ github.run_number }}
          name: ${{ steps.project-info.outputs.project_name }} v${{ steps.project-info.outputs.version }}
          body: |
            # 🚀 ${{ steps.project-info.outputs.project_name }} v${{ steps.project-info.outputs.version }}
            
            ## 📖 更新日志
            
            ${{ steps.commit-changelog.outputs.CHANGELOG }}
            
            ## 📊 构建信息
            
            | 项目 | 版本 | 构建日期 | 构建编号 | 提交哈希 |
            |------|------|----------|----------|----------|
            | ${{ steps.project-info.outputs.project_name }} | ${{ steps.project-info.outputs.version }} | ${{ steps.date.outputs.date }} | ${{ github.run_number }} | ${{ github.sha }} |
            
            ## 🔧 技术详情
            - **Java版本**: ${{ env.JAVA_VERSION }}
            - **构建工具**: Maven
            - **触发事件**: ${{ github.event_name }}
            - **分支**: ${{ github.ref }}
            
            > 此版本由 GitHub Actions 自动构建和发布
          draft: false
          prerelease: false
          files: |
            target/${{ steps.project-info.outputs.project_name }}-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}